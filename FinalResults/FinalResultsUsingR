Reading the prepared dataset into R, view first few rows of the data

```{r}
WTdata <- read.csv(file="C:/Users/Documents/Joined data- for modeling.csv", header = TRUE)
head(WTdata)
```
############################################################################################

Linear Regression 

Linear Regression Model 1:
```{r}
#colnames(WTdata)

#fit1: linear regression using all variables
fit1 <- lm(TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + SocialHousingUnits+ RoadVolume , data=WTdata)
summary(fit1)
```
Call:
lm(formula = TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + 
    SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + 
    PercentMidCentHRHousehold + SocialHousingUnits + RoadVolume, 
    data = WTdata)

Residuals:
    Min      1Q  Median      3Q     Max 
-332.13  -37.77   -1.00   47.49  242.72 

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)    
(Intercept)                1.396e+02  5.956e+01   2.344   0.0206 *  
LDIndex                   -1.254e+02  6.916e+01  -1.813   0.0722 .  
PopMales                   6.121e-03  2.867e-03   2.135   0.0347 *  
Businesses                 1.813e-01  1.493e-02  12.141  < 2e-16 ***
ChildCareSpaces            1.119e-02  9.859e-02   0.113   0.9098    
SocialAssistance           6.778e-02  8.438e-03   8.033 5.40e-13 ***
GreenSpaces               -3.818e+00  6.193e+00  -0.616   0.5387    
PollutantsAir              1.002e-04  4.516e-05   2.219   0.0283 *  
HomePrices                -4.929e-06  3.944e-05  -0.125   0.9007    
PercentMidCentHRHousehold -1.449e+00  4.837e-01  -2.995   0.0033 ** 
SocialHousingUnits         7.792e-02  1.315e-02   5.926 2.69e-08 ***
RoadVolume                -1.166e-03  3.617e-03  -0.322   0.7477    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 83.59 on 128 degrees of freedom
Multiple R-squared:  0.8844,    Adjusted R-squared:  0.8745 
F-statistic: 89.06 on 11 and 128 DF,  p-value: < 2.2e-16

############################################################################################

Linear Regression Model 2:
fit2 <- lm(TMCI ~ LDIndex + PopMales + Businesses  + SocialAssistance +  PollutantsAir  + PercentMidCentHRHousehold + SocialHousingUnits , data=WTdata)
summary(fit2)

anova(fit1, fit2)
```
Call:
lm(formula = TMCI ~ LDIndex + PopMales + Businesses + SocialAssistance + 
    PollutantsAir + PercentMidCentHRHousehold + SocialHousingUnits, 
    data = WTdata)

Residuals:
    Min      1Q  Median      3Q     Max 
-328.07  -41.89   -4.23   50.57  247.50 

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)    
(Intercept)                1.305e+02  3.543e+01   3.685 0.000333 ***
LDIndex                   -1.201e+02  5.666e+01  -2.120 0.035850 *  
PopMales                   5.599e-03  2.398e-03   2.335 0.021026 *  
Businesses                 1.817e-01  1.459e-02  12.455  < 2e-16 ***
SocialAssistance           6.827e-02  7.744e-03   8.816 6.02e-15 ***
PollutantsAir              9.827e-05  4.418e-05   2.225 0.027811 *  
PercentMidCentHRHousehold -1.448e+00  4.697e-01  -3.083 0.002493 ** 
SocialHousingUnits         7.890e-02  1.262e-02   6.252 5.20e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 82.5 on 132 degrees of freedom
Multiple R-squared:  0.8839,    Adjusted R-squared:  0.8778 
F-statistic: 143.6 on 7 and 132 DF,  p-value: < 2.2e-16

Analysis of Variance Table

Model 1: TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + 
    GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + 
    SocialHousingUnits + RoadVolume
Model 2: TMCI ~ LDIndex + PopMales + Businesses + SocialAssistance + PollutantsAir + 
    PercentMidCentHRHousehold + SocialHousingUnits
  Res.Df    RSS Df Sum of Sq      F Pr(>F)
1    128 894333                           
2    132 898405 -4   -4072.7 0.1457 0.9646

##########################################################################################################################
Cross Validation using k-fold, k=3, Linear regression model #2
```{r}
section1 <- WTdata[1:47,]
section2 <- WTdata[48:94,]
section3 <- WTdata[95:140,]

LMtrain1 <- rbind(section1, section2)
LMtest1 <- section3

LMcheck1 <- lm(TMCI ~ LDIndex + PopMales + Businesses  + SocialAssistance + PollutantsAir  + PercentMidCentHRHousehold + SocialHousingUnits, data=LMtrain1)
summary(LMcheck1)

LMpredicted1 <- predict(LMcheck1, newdata=LMtest1, type="response")
summary(LMpredicted1)

RMSE = function(pred, act){
  sqrt(mean((pred - act)^2))
}
RMSE(LMpredicted1, LMtest1$TMCI)
r1 <- cor(LMpredicted1, LMtest1$TMCI, method = "pearson")
rsq1 <- r1 * r1
rsq1

LMtrain2 <- rbind(section1, section3)
LMtest2 <- section2

LMcheck2 <- lm(TMCI ~   LDIndex + PopMales + Businesses  + SocialAssistance + PollutantsAir  + PercentMidCentHRHousehold + SocialHousingUnits, data=LMtrain2)
summary(LMcheck2)

LMpredicted2 <- predict(LMcheck2, newdata=LMtest2, type="response")
summary(LMpredicted2)

RMSE(LMpredicted2, LMtest2$TMCI)
r2 <- cor(LMpredicted2, LMtest2$TMCI, method = "pearson")
rsq2 <- r2 * r2
rsq2

LMtrain3 <- rbind(section3, section2)
LMtest3 <- section1

LMcheck3 <- lm(TMCI ~   LDIndex + PopMales + Businesses  + SocialAssistance + PollutantsAir  + PercentMidCentHRHousehold + SocialHousingUnits, data=LMtrain3)
summary(LMcheck3)

LMpredicted3 <- predict(LMcheck3, newdata=LMtest3, type="response")
summary(LMpredicted3)

RMSE(LMpredicted3, LMtest3$TMCI)
r3 <- cor(LMpredicted3, LMtest3$TMCI, method = "pearson")
rsq3 <- r3 * r3
rsq3
```
Call:
lm(formula = TMCI ~ LDIndex + PopMales + Businesses + SocialAssistance + 
    PollutantsAir + PercentMidCentHRHousehold + SocialHousingUnits, 
    data = LMtrain1)

Residuals:
    Min      1Q  Median      3Q     Max 
-168.69  -37.12   -5.16   40.71  218.40 

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)    
(Intercept)                1.098e+02  4.582e+01   2.396   0.0187 *  
LDIndex                   -1.434e+02  7.306e+01  -1.963   0.0529 .  
PopMales                   1.331e-02  2.960e-03   4.495 2.16e-05 ***
Businesses                 1.884e-01  1.555e-02  12.116  < 2e-16 ***
SocialAssistance           5.832e-02  8.329e-03   7.003 5.24e-10 ***
PollutantsAir              5.307e-05  4.525e-05   1.173   0.2441    
PercentMidCentHRHousehold -1.329e+00  5.668e-01  -2.345   0.0213 *  
SocialHousingUnits         7.346e-02  1.307e-02   5.619 2.32e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 77.2 on 86 degrees of freedom
Multiple R-squared:  0.9159,    Adjusted R-squared:  0.9091 
F-statistic: 133.9 on 7 and 86 DF,  p-value: < 2.2e-16

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  111.9   201.0   338.4   378.2   508.3  1099.0 
[1] 106.1614
[1] 0.7936345

Call:
lm(formula = TMCI ~ LDIndex + PopMales + Businesses + SocialAssistance + 
    PollutantsAir + PercentMidCentHRHousehold + SocialHousingUnits, 
    data = LMtrain2)

Residuals:
     Min       1Q   Median       3Q      Max 
-241.225  -35.562   -0.807   38.357  223.096 

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)    
(Intercept)                1.459e+02  4.096e+01   3.561 0.000609 ***
LDIndex                   -1.459e+02  6.357e+01  -2.295 0.024184 *  
PopMales                   7.194e-03  2.649e-03   2.715 0.008021 ** 
Businesses                 1.173e-01  1.989e-02   5.898 7.26e-08 ***
SocialAssistance           7.818e-02  8.548e-03   9.147 2.72e-14 ***
PollutantsAir              2.099e-04  4.476e-05   4.689 1.04e-05 ***
PercentMidCentHRHousehold -9.605e-01  5.500e-01  -1.747 0.084325 .  
SocialHousingUnits         2.389e-02  2.041e-02   1.171 0.245035    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 73.58 on 85 degrees of freedom
Multiple R-squared:  0.8902,    Adjusted R-squared:  0.8812 
F-statistic: 98.49 on 7 and 85 DF,  p-value: < 2.2e-16

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  111.3   204.0   240.2   312.7   358.9   883.4 
[1] 141.5704
[1] 0.8879573

Call:
lm(formula = TMCI ~ LDIndex + PopMales + Businesses + SocialAssistance + 
    PollutantsAir + PercentMidCentHRHousehold + SocialHousingUnits, 
    data = LMtrain3)

Residuals:
    Min      1Q  Median      3Q     Max 
-323.53  -40.23    0.43   44.43  204.02 

Coefficients:
                            Estimate Std. Error t value Pr(>|t|)    
(Intercept)                1.533e+02  4.008e+01   3.826 0.000248 ***
LDIndex                   -1.252e+02  6.657e+01  -1.880 0.063491 .  
PopMales                   3.490e-04  2.915e-03   0.120 0.904975    
Businesses                 2.021e-01  1.759e-02  11.495  < 2e-16 ***
SocialAssistance           8.246e-02  1.173e-02   7.029 4.88e-10 ***
PollutantsAir             -9.085e-06  1.024e-04  -0.089 0.929479    
PercentMidCentHRHousehold -1.937e+00  5.560e-01  -3.483 0.000785 ***
SocialHousingUnits         8.334e-02  1.527e-02   5.458 4.68e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 84.13 on 85 degrees of freedom
Multiple R-squared:  0.8834,    Adjusted R-squared:  0.8738 
F-statistic: 92.04 on 7 and 85 DF,  p-value: < 2.2e-16

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  25.23  178.30  247.40  327.80  400.60  945.70 
[1] 89.96489
[1] 0.8567799

############################################################################################
Cross Validation using 3-fold - Reduced Model
#RMSE COMPARISONS:
#remove PollutantsAir (109, 113, 90)
#remove LDIndex (109, 112, 89)
#remove Popmales (89, 110, 89)
```{r}
LMcheck1 <- lm(TMCI ~   Businesses  + SocialAssistance   + PercentMidCentHRHousehold + SocialHousingUnits, data=LMtrain1)
summary(LMcheck1)
shapiro.test(residuals(LMcheck1))

LMpredicted1 <- predict(LMcheck1, newdata=LMtest1, type="response")
summary(LMpredicted1)

RMSE(LMpredicted1, LMtest1$TMCI)
r1 <- cor(LMpredicted1, LMtest1$TMCI, method = "pearson")
rsq1 <- r1 * r1
rsq1

LMtrain2 <- rbind(section1, section3)
LMtest2 <- section2

LMcheck2 <- lm(TMCI ~     Businesses  + SocialAssistance   + PercentMidCentHRHousehold + SocialHousingUnits, data=LMtrain2)
summary(LMcheck2)
shapiro.test(residuals(LMcheck2))
LMpredicted2 <- predict(LMcheck2, newdata=LMtest2, type="response")
summary(LMpredicted2)

RMSE(LMpredicted2, LMtest2$TMCI)
r2 <- cor(LMpredicted2, LMtest2$TMCI, method = "pearson")
rsq2 <- r2 * r2
rsq2

LMtrain3 <- rbind(section3, section2)
LMtest3 <- section1

LMcheck3 <- lm(TMCI ~     Businesses  + SocialAssistance   + PercentMidCentHRHousehold + SocialHousingUnits, data=LMtrain3)
summary(LMcheck3)
shapiro.test(residuals(LMcheck3))
LMpredicted3 <- predict(LMcheck3, newdata=LMtest3, type="response")
summary(LMpredicted3)

RMSE(LMpredicted3, LMtest3$TMCI)
r3 <- cor(LMpredicted3, LMtest3$TMCI, method = "pearson")
rsq3 <- r3 * r3
rsq3
```
Call:
lm(formula = TMCI ~ Businesses + SocialAssistance + PercentMidCentHRHousehold + 
    SocialHousingUnits, data = LMtrain1)

Residuals:
     Min       1Q   Median       3Q      Max 
-220.442  -45.496   -7.832   37.798  239.372 

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)    
(Intercept)               97.032021  16.717545   5.804 9.79e-08 ***
Businesses                 0.221605   0.014041  15.782  < 2e-16 ***
SocialAssistance           0.076516   0.007638  10.017 2.95e-16 ***
PercentMidCentHRHousehold -2.231858   0.560829  -3.980 0.000141 ***
SocialHousingUnits         0.079229   0.013788   5.746 1.26e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 86.12 on 89 degrees of freedom
Multiple R-squared:  0.8917,    Adjusted R-squared:  0.8869 
F-statistic: 183.3 on 4 and 89 DF,  p-value: < 2.2e-16


    Shapiro-Wilk normality test

data:  residuals(LMcheck1)
W = 0.96169, p-value = 0.007506

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  78.37  202.40  325.40  358.30  488.10  999.80 
[1] 87.8747
[1] 0.8195496

Call:
lm(formula = TMCI ~ Businesses + SocialAssistance + PercentMidCentHRHousehold + 
    SocialHousingUnits, data = LMtrain2)

Residuals:
    Min      1Q  Median      3Q     Max 
-322.52  -39.22   -8.97   40.09  298.38 

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)    
(Intercept)               96.930912  18.676963   5.190 1.34e-06 ***
Businesses                 0.184158   0.016599  11.094  < 2e-16 ***
SocialAssistance           0.085426   0.007623  11.206  < 2e-16 ***
PercentMidCentHRHousehold -1.765260   0.599405  -2.945  0.00413 ** 
SocialHousingUnits         0.035030   0.022646   1.547  0.12548    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 84 on 88 degrees of freedom
Multiple R-squared:  0.8519,    Adjusted R-squared:  0.8452 
F-statistic: 126.6 on 4 and 88 DF,  p-value: < 2.2e-16


    Shapiro-Wilk normality test

data:  residuals(LMcheck2)
W = 0.9343, p-value = 0.0001575

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  126.4   216.7   259.9   336.1   369.1   993.5 
[1] 109.532
[1] 0.9069671

Call:
lm(formula = TMCI ~ Businesses + SocialAssistance + PercentMidCentHRHousehold + 
    SocialHousingUnits, data = LMtrain3)

Residuals:
    Min      1Q  Median      3Q     Max 
-338.43  -41.03   -1.60   47.81  217.47 

Coefficients:
                           Estimate Std. Error t value Pr(>|t|)    
(Intercept)               91.766553  17.364668   5.285 9.05e-07 ***
Businesses                 0.197893   0.014665  13.494  < 2e-16 ***
SocialAssistance           0.075040   0.008319   9.020 3.73e-14 ***
PercentMidCentHRHousehold -2.129740   0.519475  -4.100 9.19e-05 ***
SocialHousingUnits         0.090810   0.014428   6.294 1.17e-08 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 84.4 on 88 degrees of freedom
Multiple R-squared:  0.8786,    Adjusted R-squared:  0.873 
F-statistic: 159.2 on 4 and 88 DF,  p-value: < 2.2e-16


    Shapiro-Wilk normality test

data:  residuals(LMcheck3)
W = 0.95358, p-value = 0.002289

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  29.52  183.60  253.00  334.20  394.80  931.50 
[1] 88.81928
[1] 0.8569845

############################################################################################
Checking Full and Reduced Linear Models & Residuals (fit3 and fit4)
```{r}
fit3 <- lm(TMCI ~  Businesses  + SocialAssistance  + PercentMidCentHRHousehold + SocialHousingUnits, data=WTdata)
anova(fit2, fit3) 

par(mfrow = c(2, 2)
plot(fit2)
par(mfrow = c(2, 2))
plot(fit3)
shapiro.test(residuals(fit2))
shapiro.test(residuals(fit3))
```

Analysis of Variance Table

Model 1: TMCI ~ LDIndex + PopMales + Businesses + SocialAssistance + PollutantsAir + 
    PercentMidCentHRHousehold + SocialHousingUnits
Model 2: TMCI ~ Businesses + SocialAssistance + PercentMidCentHRHousehold + 
    SocialHousingUnits
  Res.Df    RSS Df Sum of Sq      F  Pr(>F)   
1    132 898405                               
2    135 990301 -3    -91896 4.5007 0.00485 **
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

    Shapiro-Wilk normality test

data:  residuals(fit2)
W = 0.96666, p-value = 0.0017


    Shapiro-Wilk normality test

data:  residuals(fit3)
W = 0.95405, p-value = 0.0001293

############################################################################################

Linear Regression With Transformations
```{r}
WTdata$LogTMCI <- log(WTdata$TMCI)
WTdata$LogBusinesses <- log(WTdata$Businesses)
WTdata$LogSocialAssistance <- log(WTdata$SocialAssistance)
WTdata$LogPopMales <- log(WTdata$PopMales)
WTdata$LogGreenSpaces <- log(WTdata$GreenSpaces)

#After transformations, HomePrices and LogSocialAssistance are correlated (-0.76) so HomePrices is removed

#full model:
#Tfit1 <- lm(LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + LogSocialAssistance + ChildCareSpaces + LogGreenSpaces + PollutantsAir  + PercentMidCentHRHousehold + SocialHousingUnits + RoadVolume , data=WTdata)
#reduced model:
Tfit1 <- lm(LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + LogSocialAssistance + SocialHousingUnits  , data=WTdata)
summary(Tfit1)
par(mfrow = c(2, 2))  
plot(Tfit1)
shapiro.test(residuals(Tfit1))
```

Call:
lm(formula = LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + 
    LogSocialAssistance + SocialHousingUnits, data = WTdata)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.75137 -0.15001  0.02016  0.16145  0.78841 

Coefficients:
                      Estimate Std. Error t value Pr(>|t|)    
(Intercept)          1.681e-01  5.150e-01   0.326 0.744666    
LDIndex             -5.164e-01  1.987e-01  -2.598 0.010412 *  
LogPopMales          2.090e-01  7.656e-02   2.730 0.007176 ** 
LogBusinesses        2.780e-01  3.117e-02   8.920 3.05e-15 ***
LogSocialAssistance  3.143e-01  3.926e-02   8.007 5.00e-13 ***
SocialHousingUnits   1.334e-04  3.896e-05   3.425 0.000818 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.2619 on 134 degrees of freedom
Multiple R-squared:  0.8246,    Adjusted R-squared:  0.8181 
F-statistic:   126 on 5 and 134 DF,  p-value: < 2.2e-16


    Shapiro-Wilk normality test

data:  residuals(Tfit1)
W = 0.98478, p-value = 0.1236


############################################################################################

Cross Validation using 3-fold Using Model with Transformations
```{r}
LMcheck1 <- lm(LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + LogSocialAssistance + SocialHousingUnits, data=LMtrain1)
summary(LMcheck1)
shapiro.test(residuals(LMcheck1))
LMpredicted1 <- predict(LMcheck1, newdata=LMtest1, type="response")
summary(LMpredicted1)

RMSE(LMpredicted1, LMtest1$LogTMCI)
RMSE(exp(LMpredicted1), exp(LMtest1$LogTMCI))
r1 <- cor(LMpredicted1, LMtest1$LogTMCI, method = "pearson")
rsq1 <- r1 * r1
rsq1

LMtrain2 <- rbind(section1, section3)
LMtest2 <- section2

LMcheck2 <- lm(LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + LogSocialAssistance + SocialHousingUnits, data=LMtrain2)
summary(LMcheck2)
shapiro.test(residuals(LMcheck2))
LMpredicted2 <- predict(LMcheck2, newdata=LMtest2, type="response")
summary(LMpredicted2)

RMSE(LMpredicted2, LMtest2$LogTMCI)
RMSE(exp(LMpredicted2), exp(LMtest2$LogTMCI))
r2 <- cor(LMpredicted2, LMtest2$LogTMCI, method = "pearson")
rsq2 <- r2 * r2
rsq2

LMtrain3 <- rbind(section3, section2)
LMtest3 <- section1

LMcheck3 <- lm(LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + LogSocialAssistance + SocialHousingUnits, data=LMtrain3)
summary(LMcheck3)
shapiro.test(residuals(LMcheck3))
LMpredicted3 <- predict(LMcheck3, newdata=LMtest3, type="response")
summary(LMpredicted3)

RMSE(LMpredicted3, LMtest3$LogTMCI)
RMSE(exp(LMpredicted3), exp(LMtest3$LogTMCI))
r3 <- cor(LMpredicted3, LMtest3$LogTMCI, method = "pearson")
rsq3 <- r3 * r3
rsq3
```
Call:
lm(formula = LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + 
    LogSocialAssistance + SocialHousingUnits, data = LMtrain1)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.70783 -0.16862 -0.00184  0.16129  0.69700 

Coefficients:
                      Estimate Std. Error t value Pr(>|t|)    
(Intercept)         -3.009e-01  6.478e-01  -0.465 0.643416    
LDIndex             -6.239e-01  2.408e-01  -2.590 0.011217 *  
LogPopMales          3.249e-01  9.491e-02   3.423 0.000941 ***
LogBusinesses        2.802e-01  3.621e-02   7.738 1.58e-11 ***
LogSocialAssistance  2.470e-01  4.527e-02   5.456 4.42e-07 ***
SocialHousingUnits   1.393e-04  4.286e-05   3.250 0.001634 ** 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.2597 on 88 degrees of freedom
Multiple R-squared:  0.8311,    Adjusted R-squared:  0.8215 
F-statistic: 86.59 on 5 and 88 DF,  p-value: < 2.2e-16


    Shapiro-Wilk normality test

data:  residuals(LMcheck1)
W = 0.99338, p-value = 0.9266

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  4.772   5.319   5.780   5.752   6.194   7.025 
[1] 0.2937578
[1] 95.93731
[1] 0.8048991

Call:
lm(formula = LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + 
    LogSocialAssistance + SocialHousingUnits, data = LMtrain2)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.66640 -0.13961  0.01116  0.15876  0.71814 

Coefficients:
                      Estimate Std. Error t value Pr(>|t|)    
(Intercept)         -2.817e-01  6.001e-01  -0.469  0.64001    
LDIndex             -5.194e-01  2.603e-01  -1.996  0.04910 *  
LogPopMales          2.807e-01  8.813e-02   3.185  0.00201 ** 
LogBusinesses        2.204e-01  3.544e-02   6.220 1.69e-08 ***
LogSocialAssistance  3.348e-01  4.843e-02   6.914 7.51e-10 ***
SocialHousingUnits   1.014e-04  6.641e-05   1.527  0.13044    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.2439 on 87 degrees of freedom
Multiple R-squared:  0.8502,    Adjusted R-squared:  0.8416 
F-statistic: 98.79 on 5 and 87 DF,  p-value: < 2.2e-16


    Shapiro-Wilk normality test

data:  residuals(LMcheck2)
W = 0.99435, p-value = 0.9656

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  4.811   5.348   5.588   5.679   5.962   7.043 
[1] 0.3062509
[1] 129.4836
[1] 0.7588259

Call:
lm(formula = LogTMCI ~ LDIndex + LogPopMales + LogBusinesses + 
    LogSocialAssistance + SocialHousingUnits, data = LMtrain3)

Residuals:
     Min       1Q   Median       3Q      Max 
-0.83905 -0.12872  0.00236  0.14746  0.73358 

Coefficients:
                      Estimate Std. Error t value Pr(>|t|)    
(Intercept)          8.082e-01  6.374e-01   1.268  0.20819    
LDIndex             -6.565e-01  2.391e-01  -2.746  0.00733 ** 
LogPopMales          3.516e-02  9.711e-02   0.362  0.71820    
LogBusinesses        3.475e-01  4.347e-02   7.993 5.11e-12 ***
LogSocialAssistance  3.971e-01  5.379e-02   7.383 8.73e-11 ***
SocialHousingUnits   1.106e-04  4.507e-05   2.454  0.01613 *  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.2686 on 87 degrees of freedom
Multiple R-squared:  0.8204,    Adjusted R-squared:  0.8101 
F-statistic: 79.51 on 5 and 87 DF,  p-value: < 2.2e-16


    Shapiro-Wilk normality test

data:  residuals(LMcheck3)
W = 0.97533, p-value = 0.07514

   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  3.648   5.161   5.534   5.542   5.919   6.771 
[1] 0.2796071
[1] 95.82622
[1] 0.8358982

###############################################################################################################

Explore the data using gradient boosting model
```{r}
#Install and load required packages
install.packages("caret", dependencies = TRUE)
install.packages( “doParallel”)
library(caret)
library(doParallel)

#First, randomly use a training set made of 70% of the data. The test set would the the remaining 30% of data.
data <- WTdata
set.seed(70) #for reprodicibility
gbmTrain <- data[sample(nrow(data), round(nrow(data)*0.7),  replace = F),]

#Using a tuning grid method to determine which hyper parameters to use for the gbm (trying different values for number of trees, interaction depth and shrinkage). Use a repeated k-folds cross validation with k= 3 repeated 2 times, allowing parallel.
grid <- expand.grid(n.trees = c(1000,1500), interaction.depth=c(1:3), shrinkage=c(0.01,0.05,0.1), n.minobsinnode=c(10))
ctrl <- trainControl(method = "repeatedcv",number = 3, repeats = 2, allowParallel = T)
registerDoParallel(detectCores()-1)

#Build the model and show results.
set.seed(124) #for reproducibility
unwantedoutput <- capture.output(GBMModel <- train(TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + SocialHousingUnits+ RoadVolume, data = gbmTrain, method = "gbm", trControl = ctrl, tuneGrid = grid))
print(GBMModel)
```

Stochastic Gradient Boosting 

98 samples
11 predictors

No pre-processing
Resampling: Cross-Validated (3 fold, repeated 2 times) 
Summary of sample sizes: 66, 65, 65, 66, 66, 64, ... 
Resampling results across tuning parameters:

  shrinkage  interaction.depth  n.trees  RMSE      Rsquared   MAE      
  0.01       1                  1000     124.5538  0.6702776   91.28352
  0.01       1                  1500     125.9143  0.6610781   93.81676
  0.01       2                  1000     124.9442  0.6647874   91.69713
  0.01       2                  1500     126.3767  0.6553488   93.94623
  0.01       3                  1000     122.9220  0.6773135   91.01083
  0.01       3                  1500     124.3726  0.6662377   92.98804
  0.05       1                  1000     130.5444  0.6314608   98.48488
  0.05       1                  1500     133.4790  0.6162899  101.08602
  0.05       2                  1000     133.8058  0.6261367  100.82480
  0.05       2                  1500     135.9480  0.6167106  102.71247
  0.05       3                  1000     132.2098  0.6242590   99.63868
  0.05       3                  1500     133.7175  0.6178934  101.08170
  0.10       1                  1000     135.7826  0.5968569  101.99444
  0.10       1                  1500     138.4157  0.5868969  104.34030
  0.10       2                  1000     133.5068  0.6142414  100.34431
  0.10       2                  1500     134.3734  0.6101425  101.03826
  0.10       3                  1000     134.2735  0.6163732  101.37481
  0.10       3                  1500     135.2182  0.6113826  102.03264

Tuning parameter 'n.minobsinnode' was held constant at a value of 10
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were n.trees = 1000, interaction.depth = 3, shrinkage = 0.01
 and n.minobsinnode = 10.

############################################################################
Try the same thing with n.trees = c(100,500) since less trees seems better for reducing RMSE
```{r}
grid <- expand.grid(n.trees = c(100,500), interaction.depth=c(1:3), shrinkage=c(0.01,0.05,0.1), n.minobsinnode=c(10))
ctrl <- trainControl(method = "repeatedcv",number = 3, repeats = 2, allowParallel = T)
registerDoParallel(detectCores()-1)

set.seed(124) 
unwantedoutput <- capture.output(GBMModel <- train(TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + SocialHousingUnits+ RoadVolume, data = gbmTrain, method = "gbm", trControl = ctrl, tuneGrid = grid))

print(GBMModel)
```

Stochastic Gradient Boosting 

98 samples
11 predictors

No pre-processing
Resampling: Cross-Validated (3 fold, repeated 2 times) 
Summary of sample sizes: 66, 65, 65, 66, 66, 64, ... 
Resampling results across tuning parameters:

  shrinkage  interaction.depth  n.trees  RMSE      Rsquared   MAE      
  0.01       1                  100      149.8561  0.6247620  109.07270
  0.01       1                  500      122.9331  0.6776462   88.10746
  0.01       2                  100      145.9429  0.6281188  106.04935
  0.01       2                  500      123.6010  0.6725038   88.49195
  0.01       3                  100      146.6359  0.6252309  106.50907
  0.01       3                  500      121.9999  0.6826048   87.93154
  0.05       1                  100      121.7388  0.6860385   87.45621
  0.05       1                  500      126.3281  0.6552634   94.09932
  0.05       2                  100      124.0571  0.6806600   90.89883
  0.05       2                  500      130.4522  0.6395744   97.87433
  0.05       3                  100      124.2179  0.6739933   89.72147
  0.05       3                  500      130.1854  0.6356540   97.45100
  0.10       1                  100      126.0861  0.6545198   93.03760
  0.10       1                  500      131.9145  0.6119792   97.79394
  0.10       2                  100      126.5011  0.6594136   92.67387
  0.10       2                  500      131.1895  0.6253479   98.15926
  0.10       3                  100      124.3492  0.6615998   92.49998
  0.10       3                  500      132.1631  0.6263421  100.34154

Tuning parameter 'n.minobsinnode' was held constant at a value of 10
RMSE was used to select the optimal model using the smallest value.
The final values used for the model were n.trees = 100, interaction.depth = 1, shrinkage = 0.05
 and n.minobsinnode = 10.

############################################################################

Try the gbm using those settings
```{r}
GB1=gbm(TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + SocialHousingUnits+ RoadVolume, data=WTdata,distribution = "gaussian",n.trees = 100, shrinkage = 0.05, interaction.depth = 1)

summary(GB1)
```
 
var               rel.inf
<fctr>             <dbl>
Businesses            Businesses        34.9107346        
PopMales            PopMales        25.5058026        
SocialAssistance        SocialAssistance    21.9354783        
SocialHousingUnits        SocialHousingUnits    9.1917837        
PollutantsAir            PollutantsAir        4.2195104        
LDIndex                LDIndex            1.9863046        
GreenSpaces            GreenSpaces        1.0937376        
HomePrices            HomePrices        0.6078615        
PercentMidCentHRHousehold    PercentMidCentHRHousehold    0.3608699        
RoadVolume            RoadVolume        0.1879166    
ChildCareSpaces        ChildCareSpaces    0.0000000

############################################################################
Cross validation for gbm using 3-fold 
```{r}
#Partition the data in the same way to compare to LM model cross validation results
section1 <- WTdata[1:47,]
section2 <- WTdata[48:94,]
section3 <- WTdata[95:140,]
set.seed(999) #for reproducibility
#define RMSE function
RMSE = function(pred, act){
  sqrt(mean((pred - act)^2))
}

#First 
GBtrain1 <- rbind(section1, section2)
GBtest1 <- section3

GBcheck1 <- gbm(TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + SocialHousingUnits+ RoadVolume, data=GBtrain1, distribution = "gaussian",n.trees = 100, shrinkage = 0.05, interaction.depth = 1)

GBpredicted1 <- predict(GBcheck1, newdata=GBtest1, n.trees = 100, type="response")

summary(GBpredicted1)
RMSE(GBpredicted1, GBtest1$TMCI)
R1 <- cor(GBpredicted1, GBtest1$TMCI, method = "pearson")
Rsq1 <- R1*R1
Rsq1

#Second 
GBtrain2 <- rbind(section1, section3)
GBtest2 <- section2

GBcheck2 <- gbm(TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + SocialHousingUnits+ RoadVolume, data=GBtrain2, distribution = "gaussian",n.trees = 100, shrinkage = 0.05, interaction.depth = 1)

GBpredicted2 <- predict(GBcheck2, newdata=GBtest2, n.trees = 100, type="response")

summary(GBpredicted2)
RMSE(GBpredicted2, GBtest2$TMCI)
R2 <- cor(GBpredicted2, GBtest2$TMCI, method = "pearson")
Rsq2 <- R2*R2
Rsq2

#Third 
GBtrain3 <- rbind(section3, section2)
GBtest3 <- section1

GBcheck3 <- gbm(TMCI ~ LDIndex + PopMales + Businesses + ChildCareSpaces + SocialAssistance + GreenSpaces + PollutantsAir + HomePrices + PercentMidCentHRHousehold + SocialHousingUnits+ RoadVolume, data=GBtrain3, distribution = "gaussian",n.trees = 100, shrinkage = 0.05, interaction.depth = 1)

GBpredicted3 <- predict(GBcheck3, newdata=GBtest3, n.trees = 100, type="response")
summary(GBpredicted3)

RMSE(GBpredicted3, GBtest3$TMCI)
R3 <- cor(GBpredicted3, GBtest3$TMCI, method = "pearson")
Rsq3 <- R3 * R3
Rsq3
```
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  169.0   205.8   365.4   407.3   595.4   886.0 
[1] 137.1757
[1] 0.7223210
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  148.1   176.5   244.2   298.0   343.3   739.6 
[1] 185.619
[1] 0.6819460
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  152.1   184.1   279.3   326.0   429.9   731.1 
[1] 112.6225
[1] 0.8162667



